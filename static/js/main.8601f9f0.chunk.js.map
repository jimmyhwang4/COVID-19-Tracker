{"version":3,"sources":["components/Header.js","components/Chart.js","pages/Home.js","pages/Country.js","components/NewsList.js","pages/News.js","App.js","serviceWorker.js","index.js"],"names":["Header","c","className","href","alt","height","width","src","Chart","useState","countryData","setCountryData","nameData","setNameData","casesData","setCasesData","useEffect","axios","get","then","response","data","countryArray","casesArray","map","item","push","country","cases","console","log","state","labels","slice","datasets","label","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","legend","position","Home","coronaGlobalData","setCoronaGlobalData","setGlobalCases","todayCases","setGlobalTodayCases","deaths","setGlobalDeaths","todayDeaths","setGlobalTodayDeaths","recovered","setGlobalRecovered","active","setGlobalActive","critical","setGlobalCritical","catch","error","class","Country","coronaCountryData","setCoronaCountryData","setCountry","setCountryCases","setCountryTodayCases","setCountryDeaths","setCountryTodayDeaths","setCountryRecovered","setCountryActive","setCountryCritical","casesPerOneMillion","setCountryCasesPerOneMillion","deathsPerOneMillion","setCountryDeathsPerOneMillion","totalTests","setCountryTotalTests","testsPerOneMillion","setCountryTestsPerOneMillion","history","useHistory","NewsCountry","news","isLoading","errors","articles","id","source","author","description","url","urlToImage","publishedAt","setState","this","getNewsCountry","Fragment","newsInfo","key","target","rel","React","Component","searchParams","location","search","URLSearchParams","NewsList","getNews","News","App","to","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8601f9f0.chunk.js","sourcesContent":["import React from \"react\";\nimport '../App.css';\n\nfunction Header( {c} ) {\n\n    return (\n        <div className=\"Header\">\n            <div className=\"menuNav\">\n                <a href=\"/\">\n                    <div className=\"menuButton\">\n                        <img alt=\"world\" height=\"24\" width=\"auto\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c4/Globe_icon.svg/420px-Globe_icon.svg.png\"></img>\n                        <p><strong>World</strong></p>\n                    </div>\n                </a>\n                <a href=\"/country/?country=USA\">\n                    <div className=\"menuButton\">\n                        <img alt=\"us\" src=\"https://www.countryflags.io/US/flat/32.png\"></img>\n                        <p><strong>USA</strong></p>\n                    </div>\n                </a>\n                <a href=\"/country/?country=Brazil\">\n                    <div className=\"menuButton\">\n                        <img alt=\"br\" src=\"https://www.countryflags.io/BR/flat/32.png\"></img>\n                        <p><strong>Brazil</strong></p>\n                    </div>\n                </a>\n                <a href=\"/country/?country=Russia\">\n                    <div className=\"menuButton\">\n                        <img alt=\"ru\" src=\"https://www.countryflags.io/RU/flat/32.png\"></img>\n                        <p><strong>Russia</strong></p>\n                    </div>\n                </a>\n                <a href=\"/country/?country=India\">\n                    <div className=\"menuButton\">\n                        <img alt=\"in\" src=\"https://www.countryflags.io/IN/flat/32.png\"></img>\n                        <p><strong>India</strong></p>\n                    </div>\n                </a>\n                <a href=\"/country/?country=UK\">\n                    <div className=\"menuButton\">\n                        <img alt=\"gb\" src=\"https://www.countryflags.io/GB/flat/32.png\"></img>\n                        <p><strong>UK</strong></p>\n                    </div>\n                </a>\n                <a href=\"/news\">\n                    <div className=\"menuButton\">\n                        <p><strong>News</strong></p>\n                    </div>\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {Bar} from 'react-chartjs-2';\n\nfunction Chart() {\n  // API\n  const [countryData, setCountryData] = useState([]);\n\n  const [nameData, setNameData] = useState([]);\n  const [casesData, setCasesData] = useState([]);\n\n  useEffect(() => {\n    if (countryData) {\n      axios\n        .get(\n          `https://coronavirus-19-api.herokuapp.com/countries`\n        )\n        .then(function (response) {\n          // handle success\n          setCountryData(response.data);\n        });\n      }\n    },[countryData]);\n\n  useEffect(() => {\n    if (nameData) {\n    let countryArray = [];\n    let casesArray = [];\n\n    countryData.map(item => {\n      countryArray.push(item.country);\n      casesArray.push(item.cases);\n    })\n    setNameData(countryArray);\n    setCasesData(casesArray);\n    console.log('values', countryData, casesData);\n    }\n  }, [nameData]);\n\n  let nameDataRemoved = nameData.slice(1, 17);\n  let casesDataRemoved = casesData.slice(1, 17);\n\n  // Chart\n  const state = {\n\n    // x-axis (countryArray)\n    labels: nameDataRemoved,\n    datasets: [\n      {\n        label: 'Cases',\n        backgroundColor: 'rgba(125,125,125)',\n        borderColor: 'rgba(125,125,125)',\n        borderWidth: 0,\n        // y-axis (casesArray)\n        data: casesDataRemoved\n      }\n    ]\n  }\n  return (\n    <div>\n      <Bar\n        data={state}\n        options={{\n          title:{\n            display: true,\n            text: 'COVID-19 Cases in Most Affected Countries',\n            fontSize: 18\n          },\n          legend:{\n            display: true,\n            position: 'right'\n          }\n        }}\n      />\n    </div>\n  );\n}\nexport default Chart;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport Header from \"../components/Header\";\nimport Chart from \"../components/Chart\";\n\nfunction Home() {\n  const [coronaGlobalData, setCoronaGlobalData] = useState({});\n\n  const [cases, setGlobalCases] = useState(\"\");\n  const [todayCases, setGlobalTodayCases] = useState(\"\");\n  const [deaths, setGlobalDeaths] = useState(\"\");\n  const [todayDeaths, setGlobalTodayDeaths] = useState(\"\");\n  const [recovered, setGlobalRecovered] = useState(\"\");\n  const [active, setGlobalActive] = useState(\"\");\n  const [critical, setGlobalCritical] = useState(\"\");\n\n  useEffect(() => {\n      axios\n        .get(\n          `https://coronavirus-19-api.herokuapp.com/countries/world`\n        )\n        .then(function (response) {\n          // handle success\n          setCoronaGlobalData(response.data);\n        })\n        .catch(function(error) {\n          // handle error\n          console.log(error);\n        });\n    });\n\n  useEffect(() => {\n    if (coronaGlobalData) {\n      setGlobalCases(coronaGlobalData.cases);\n      setGlobalTodayCases(coronaGlobalData.todayCases);\n      setGlobalDeaths(coronaGlobalData.deaths);\n      setGlobalTodayDeaths(coronaGlobalData.todayDeaths);\n      setGlobalRecovered(coronaGlobalData.recovered);\n      setGlobalActive(coronaGlobalData.active);\n      setGlobalCritical(coronaGlobalData.critical);\n    }\n  }, [coronaGlobalData]);\n\n  return (\n    <div className=\"dataContainer\">\n\n        <Header />\n\n        <div className=\"sectionContainerMain\">\n          <p><strong>COVID-19 in the World</strong></p>\n        </div>\n        <div className=\"sectionContainer\">\n            <div className=\"infoRowContainer\">\n\n              <div className=\"infoRowMain\">\n                <div className=\"infoColumn\">\n                  <p><strong>Confirmed:</strong></p>\n                  <p><strong>Deaths:</strong></p>\n                  <p><strong>Recovered:</strong></p>\n                </div>\n                <div className=\"infoColumn2\">\n                  <div className=\"infoRow\">\n                    <p><strong>{cases}</strong></p>\n                  </div>\n                  <div className=\"infoRow\">\n                    <p><span className=\"redText\"><strong>{deaths}</strong></span></p>\n                  </div>\n                  <div className=\"infoRow\">\n                    <p><span className=\"greenText\"><strong>{recovered}</strong></span></p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"infoColumnArrows\">\n                <div className=\"infoRowArrows\">\n                  <img height=\"10px\" width=\"14px\" src=\"./black-arrow.png\"></img>\n                  <p><span class=\"smallText\">{todayCases} Today</span></p>\n                </div>\n                <div className=\"infoRowArrows\">\n                  <img height=\"10px\" width=\"14px\" src=\"./red-arrow.png\"></img>\n                  <p><span class=\"smallRedText\">{todayDeaths} Today</span></p>\n                </div>\n              </div>\n\n            </div>\n        </div>\n\n        <div className=\"sectionContainer\">\n          <div className=\"infoRowMain\">\n            <div className=\"infoColumn\">\n              <p><strong>Active:</strong></p>\n              <p><strong>Critical:</strong></p>\n            </div>\n            <div className=\"infoColumn2\">\n              <p><strong>{active}</strong></p>\n              <p><strong>{critical}</strong></p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"chartContainer\">\n            <Chart />\n        </div>\n\n    </div>\n\n    \n);\n\n\n}\n\nexport default Home;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Header from \"../components/Header\";\n\nfunction Country() {\n  const [coronaCountryData, setCoronaCountryData] = useState({});\n  const [country, setCountry] = useState(null);\n\n  const [cases, setCountryCases] = useState(\"\");\n  const [todayCases, setCountryTodayCases] = useState(\"\");\n  const [deaths, setCountryDeaths] = useState(\"\");\n  const [todayDeaths, setCountryTodayDeaths] = useState(\"\");\n  const [recovered, setCountryRecovered] = useState(\"\");\n  const [active, setCountryActive] = useState(\"\");\n  const [critical, setCountryCritical] = useState(\"\");\n  const [casesPerOneMillion, setCountryCasesPerOneMillion] = useState(\"\");\n  const [deathsPerOneMillion, setCountryDeathsPerOneMillion] = useState(\"\");\n\n  const [totalTests, setCountryTotalTests] = useState(\"\");\n  const [testsPerOneMillion, setCountryTestsPerOneMillion] = useState(\"\");\n\n  let history = useHistory();\n\n  // NEWS BY COUNTRY\n  class NewsCountry extends React.Component {\n    state = {\n        news: [],\n        isLoading: true,\n        errors: null\n    };\n    \n    getNewsCountry() {\n        axios\n            .get(`https://newsapi.org/v2/everything?q=${country}%20AND%20coronavirus&apiKey=407c0529551e4f43a30236fab2be4290`)\n            .then(response =>\n                response.data.articles.map(news => ({\n                    id: `${news.source.id}`,\n                    title: `${news.title}`,\n                    author: `${news.author}`,\n                    description: `${news.description}`,\n                    url: `${news.url}`,\n                    urlToImage: `${news.urlToImage}`,\n                    publishedAt: `${news.publishedAt}`\n                }))\n            )\n            .then(news => {\n                this.setState({\n                    news,\n                    isLoading: false\n                });\n            })\n            .catch(error => this.setState({ error, isLoading: false }));\n    }\n\n    componentDidMount() {\n        this.getNewsCountry();\n    }\n\n    render() {\n        const { isLoading, news } = this.state;\n        return (\n            <React.Fragment>\n                <div>\n                    {!isLoading ? (\n                        news.map(newsInfo => {\n                            const { id, title, author, description, url, urlToImage, publishedAt } = newsInfo;\n                            return (\n                                <div className=\"newsContainer\">\n                                    <div className =\"newsCard\" key={id}>\n                                        <div className=\"newsRow\">\n                                            <div className=\"newsImageContainer\">\n                                                <img width=\"400px\" height=\"260px\" src={urlToImage}></img>\n                                            </div>\n                                            <div className=\"newsTextContainer\">\n                                                <h2>{title}</h2>\n                                                <div className=\"menuSmallText\">\n                                                    <p>{author} • Published {publishedAt}</p>\n                                                </div>\n                                                <div className=\"menuMedText\">\n                                                    <p>{description}</p>\n                                                </div>\n                                                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>Read More</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })\n                    ) : (\n                        <p>Loading...</p>\n                    )}\n                </div>\n            </React.Fragment>\n        );\n      }\n    }\n\n    // COUNTRY DATA API\n  useEffect(() => {\n    let searchParams = history.location.search;\n    let urlParams = new URLSearchParams(searchParams);\n    let country = urlParams.get(\"country\");\n    if (country) {\n      setCountry(country);\n    } else {\n      setCountry(\"USA\");\n    }\n  }, [history]);\n\n  useEffect(() => {\n    if (country) {\n    // Make a request for the coronavirus status by country\n      axios\n        .get(\n          `https://coronavirus-19-api.herokuapp.com/countries/${country}`\n        )\n        .then(function (response) {\n          // handle success\n          setCoronaCountryData(response.data);\n        })\n        .catch(function(error) {\n          // handle error\n          console.log(error);\n        });\n    }\n  }, [country]);\n\n  useEffect(() => {\n    if (coronaCountryData) {\n      setCountryCases(coronaCountryData.cases);\n      setCountryTodayCases(coronaCountryData.todayCases);\n      setCountryDeaths(coronaCountryData.deaths);\n      setCountryTodayDeaths(coronaCountryData.todayDeaths);\n      setCountryRecovered(coronaCountryData.recovered);\n      setCountryActive(coronaCountryData.active);\n      setCountryCritical(coronaCountryData.critical);\n      setCountryCasesPerOneMillion(coronaCountryData.casesPerOneMillion);\n      setCountryDeathsPerOneMillion(coronaCountryData.deathsPerOneMillion);\n      setCountryTotalTests(coronaCountryData.totalTests);\n      setCountryTestsPerOneMillion(coronaCountryData.testsPerOneMillion);\n    }\n  }, [coronaCountryData]);\n\n  return (\n    <div className=\"dataContainer\">\n        <Header />\n        <div className=\"sectionContainerMain\">\n            <p><strong>COVID-19 in {country}</strong></p>\n        </div>\n        <div className=\"sectionContainer\">\n            <div className=\"infoRowContainer\">\n\n              <div className=\"infoRowMain\">\n                <div className=\"infoColumn\">\n                  <p><strong>Confirmed:</strong></p>\n                  <p><strong>Deaths:</strong></p>\n                  <p><strong>Recovered:</strong></p>\n                </div>\n                <div className=\"infoColumn2\">\n                  <div className=\"infoRow\">\n                    <p><strong>{cases}</strong></p>\n                  </div>\n                  <div className=\"infoRow\">\n                    <p><span className=\"redText\"><strong>{deaths}</strong></span></p>\n                  </div>\n                  <div className=\"infoRow\">\n                    <p><span className=\"greenText\"><strong>{recovered}</strong></span></p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"infoColumnArrows\">\n                <div className=\"infoRowArrows\">\n                  <img height=\"10px\" width=\"14px\" src=\"/black-arrow.png\"></img>\n                  <p><span class=\"smallText\">{todayCases} Today</span></p>\n                </div>\n                <div className=\"infoRowArrows\">\n                  <img height=\"10px\" width=\"14px\" src=\"/red-arrow.png\"></img>\n                  <p><span class=\"smallRedText\">{todayDeaths} Today</span></p>\n                </div>\n              </div>\n\n            </div>\n        </div>\n\n        <div className=\"sectionContainer\">\n          <div className=\"infoRowMain\">\n            <div className=\"infoColumn\">\n              <p><strong>Active:</strong></p>\n              <p><strong>Critical:</strong></p>\n            </div>\n            <div className=\"infoColumn2\">\n              <p><strong>{active}</strong></p>\n              <p><strong>{critical}</strong></p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"sectionContainer\">\n          <div className=\"infoRowMain\">\n            <div className=\"infoColumn\">\n              <p><strong>Cases per One Million:</strong></p>\n              <p><strong>Deaths per One Million:</strong></p>\n            </div>\n            <div className=\"infoColumn2\">\n              <p><strong>{casesPerOneMillion}</strong></p>\n              <p><strong>{deathsPerOneMillion}</strong></p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"sectionContainer\">\n          <div className=\"infoRowMain\">\n            <div className=\"infoColumn\">\n              <p><strong>Total Tests:</strong></p>\n              <p><strong>Tests per One Million:</strong></p>\n            </div>\n            <div className=\"infoColumn2\">\n              <p><strong>{totalTests}</strong></p>\n              <p><strong>{testsPerOneMillion}</strong></p>\n            </div>\n          </div>\n        </div>\n\n        <NewsCountry />\n        \n    </div>\n  );\n\n\n}\n\nexport default Country;","import React from \"react\";\nimport axios from \"axios\";\n\nimport '../App.css';\n\nclass NewsList extends React.Component {\n    state = {\n        news: [],\n        isLoading: true,\n        errors: null\n    };\n    \n    getNews() {\n        axios\n            .get(`https://newsapi.org/v2/top-headlines?country=us&q=coronavirus&apiKey=407c0529551e4f43a30236fab2be4290`)\n            .then(response =>\n                response.data.articles.map(news => ({\n                    id: `${news.source.id}`,\n                    title: `${news.title}`,\n                    author: `${news.author}`,\n                    description: `${news.description}`,\n                    url: `${news.url}`,\n                    urlToImage: `${news.urlToImage}`,\n                    publishedAt: `${news.publishedAt}`\n                }))\n            )\n            .then(news => {\n                this.setState({\n                    news,\n                    isLoading: false\n                });\n            })\n            .catch(error => this.setState({ error, isLoading: false }));\n    }\n\n    componentDidMount() {\n        this.getNews();\n    }\n\n    render() {\n        const { isLoading, news } = this.state;\n        return (\n            <React.Fragment>\n                <div>\n                    {!isLoading ? (\n                        news.map(newsInfo => {\n                            const { id, title, author, description, url, urlToImage, publishedAt } = newsInfo;\n                            return (\n                                <div className=\"newsContainer\">\n                                    <div className =\"newsCard\" key={id}>\n                                        <div className=\"newsRow\">\n                                            <div className=\"newsImageContainer\">\n                                                <img width=\"400px\" height=\"260px\" src={urlToImage}></img>\n                                            </div>\n                                            <div className=\"newsTextContainer\">\n                                                <h2>{title}</h2>\n                                                <div className=\"menuSmallText\">\n                                                    <p>{author} • Published {publishedAt}</p>\n                                                </div>\n                                                <div className=\"menuMedText\">\n                                                    <p>{description}</p>\n                                                </div>\n                                                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>Read More</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })\n                    ) : (\n                        <p>Loading...</p>\n                    )}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NewsList;","import React from \"react\";\n\nimport Header from \"../components/Header\";\nimport NewsList from \"../components/NewsList\";\n\nfunction News() {\n\n    return (\n\n        <div className=\"dataContainer\">\n\n            <Header />\n\n            <div className=\"sectionContainerMain\">\n                <p><strong>COVID-19 Top Headlines</strong></p>\n            </div>\n\n            <NewsList />\n\n        </div>\n    );\n\n}\n\nexport default News;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Home from \"./pages/Home\";\nimport Country from \"./pages/Country\";\nimport News from \"./pages/News\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route to exact path=\"/\">\n          <Home />\n        </Route>\n        <Route to exact path=\"/news\">\n          <News />\n        </Route>\n        <Route to exact path=\"/country\">\n          <Country />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}